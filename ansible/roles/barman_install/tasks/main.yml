---
# tasks file for barman_install

- name: "Install barman"
  tags: "backup"
  ansible.builtin.apt:
    name:
    - barman
    - barman-cli
    - postgresql
    state: present
    update_cache: true

- name: "generate SSH key for postgres"
  tags: "backup"
  user:
    name: postgres
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 4096
    force: no
  when: (ansible_hostname == "masterBD")

- name: "generate SSH key for barman"
  tags: "backup"
  user:
    name: barman
    uid: 994
    shell: /bin/bash
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 4096
    force: no
  when: (ansible_hostname == "backup")

- name: fetch all public ssh keys node1
  tags: "backup"
  shell: cat /var/lib/postgresql/.ssh/id_rsa.pub
  register: ssh_keys
  when: (ansible_hostname == "masterBD")

- name: transfer public key to barman
  tags: "backup"
  delegate_to: backup
  authorized_key:
    key: "{{ ssh_keys.stdout }}"
    comment: "{{ansible_hostname}}"
    user: barman
  when: (ansible_hostname == "masterBD")

- name: fetch all public ssh keys barman
  tags: "backup"
  shell: cat /var/lib/barman/.ssh/id_rsa.pub
  register: ssh_keys
  when: (ansible_hostname == "backup")

- name: transfer public key to barman
  tags: "backup"
  delegate_to: masterBD
  authorized_key:
    key: "{{ ssh_keys.stdout }}"
    comment: "{{ansible_hostname}}"
    user: postgres
  when: (ansible_hostname == "backup")

- name: Create barman user
  tags: "backup"
  remote_user: postgres
  postgresql_user:
    name: barman
    password: '{{ barman_user_password }}'
    role_attr_flags: SUPERUSER 
  ignore_errors: true
  when: (ansible_hostname == "masterBD")

- name: copy .pgpass
  tags: "backup"
  template:
    src: templates/barman/.pgpass.j2
    dest: /var/lib/barman/.pgpass
    owner: barman
    group: barman
    mode: '0600'
  when: (ansible_hostname == "backup")

- name: copy barman.conf
  template:
    src: templates/barman/barman.conf.j2
    dest: /etc/barman.conf 
    owner: barman
    group: barman
    mode: '0755'
  when: (ansible_hostname == "backup")

- name: copy bd.conf
  tags: "backup"
  template:
    src: templates/barman/masterBD.conf.j2
    dest: /etc/barman.d/masterBD.conf
    owner: barman
    group: barman
    mode: '0755'
  when: (ansible_hostname == "backup")

- name: "barman switch-wal masterBD"
  tags: "backup"
  remote_user: barman
  shell: barman switch-wal masterBD
  when: (ansible_hostname == "backup")

- name: "barman cron"
  tags: "backup"
  remote_user: barman
  shell: barman cron
  when: (ansible_hostname == "backup")